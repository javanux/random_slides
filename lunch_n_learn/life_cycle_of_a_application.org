#+TITLE: LifeCycle of an Application
#+DATE: Sat Jan  7 21:40:26 NPT 2017
#+OPTIONS: author:nil num:nil toc:nil date:nil
#+OPTIONS: reveal_rolling_links:t org-reveal-title-slide
#+REVEAL_THEME: league
#+REVEAL_ROOT: http://cdn.jsdelivr.net/reveal.js/3.0.0/

* Agenda
 - Planning for the application/server
 - Deployment
 - Sprouting a application
 - Harvesting and Retirement
* Motivation behind Learn after Lunch
  #+ATTR_REVEAL: :frag (roll-in)
  #+REVEAL_DEFAULT_FRAG_STYLE: :frag (highlight-red)
  - Raising the Awarness
  - Brief explanation on how we build a app/(server)
  - Make you guys sleep
  - I was forced üî´ but then I wanted to.[[./do_your_work.png]]
* Requirements Gathering
** General Information
   #+ATTR_REVEAL: :frag (roll-in)
   - app/service name
   - security groups
   - environment
   - instance type
   - VPC/NonVPC
   - ELB
** Ruby Specifications
   - ruby version
   - framework
   - app server(unicorn,puma)
** system depenencies

   - nodejs (rocketchat)
   - imagemagick (mediaengine)
   - libpq-dev
    #+ATTR_REVEAL: :frag (roll-in)
    #+BEGIN_SRC shell :results drawer :exports both
    apt show libpq-dev| grep -A5 -i 'description'
    #+END_SRC
    #+ATTR_REVEAL: :frag (roll-in)
    #+BEGIN_EXAMPLE
    Description: header files for libpq5 (PostgreSQL library)
     Header files and static library for compiling C programs to link
     with the libpq library in order to communicate with a PostgreSQL
     database backend.
    #+END_EXAMPLE

* YML Conversion
**  vars sections
    #+BEGIN_SRC yaml
      application: cfclient
      environments:
        production:
          url: app.cloudfactory.com

        staging:
          url: rcapp.cloudfactory.com
  
        stagingnxt:
          url: appnxt.cloudfactory.com
  
        sit:
          url: sitapp.cloudfactory.com
  
      ruby_version: 2.3.0
      dependencies:
        - nodejs
        - jq
        - libpq-dev

      ansicap_deploy_to: "/home/deploy/{{application}}"
      EC2SPIN_ROLE: app
      EC2SPIN_ENV: staging
    #+END_SRC
#+REVEAL_MARGIN: 0.1,0.4
 #+REVEAL_MARGIN: 0.2,0.1
**  playbook sections
    #+BEGIN_SRC yaml
      ---
      - name: From prebaked AMI to full-blown server
        hosts: localhost
        vars_files:
          - group_vars/vars/cfclient.yml
        roles:
          - role: ec2spin

      # add key push devops and bot's keys #toallservers :)
      - include: add_keys.yml new_hosts=spinner
        tags:
          - add_keys

      - name: Start configuring the spinner
        hosts: spinner

      - name: Install apt packages/libraries
        apt: name={{ item }} state=present update_cache=true
        with_items: "{{dependencies}}"

        roles:
          - role: chruby
            chruby_ruby_version: "{{ruby_version}}"

          - role: nginx

          - role: runit
    #+END_SRC
* Configuration Part of the CodeBase
** Gems
   - unicorn
   - hutch
   - capistrano
   - newrelic.. etc
** Yaml files
   - database.yml
   - honeybadger.yml
   - newrelic.yml
   - hutch.yml
   - redis.yml.. etc
* Adding Keys üîë of QAs and Developers
  - [[./key_request.png]]
* Codebase Deployment üöÄ
  -  Capistrano /A deployment automation tool built on Ruby, Rake, and SSH/
* Monitoring zone
  - Prometheus(open-source systems monitoring and alerting toolkit)
  - Newrelic(application/sytem level monitoring)
  - honeybadger(code level error)
  - grafana(Frontend to visualize time series data)
  - pager duty(alert system), mail, rocketchat
  - logentries(centeral log aggregrator)
* ‚ö† Only Easy Questions ‚ùì
